<?php

namespace App\Providers;

use App\Eden\Pages\Dashboard;
use BestSnipp\Eden\Components\DataTable\Actions\DeleteAction;
use BestSnipp\Eden\Components\DataTable\Actions\DetailsAction;
use BestSnipp\Eden\Components\DataTable\Actions\EditAction;
use BestSnipp\Eden\Components\DataTable\Actions\ReplicateAction;
use BestSnipp\Eden\Components\Menu\MenuHeader;
use BestSnipp\Eden\Components\Menu\MenuItem;
use BestSnipp\Eden\Facades\Eden;
use BestSnipp\Eden\Providers\EdenAppServiceProvider;
use Illuminate\Support\Facades\Gate;
use Illuminate\Support\Facades\Request;

class EdenServiceProvider extends EdenAppServiceProvider
{

    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        parent::boot();

        Eden::mainMenu(function () {
            return [
                MenuHeader::make('Main'),
                MenuItem::make('Dashboard')->edenPage(Dashboard::make()),
            ];
        });

        Eden::accountMenu(function (Request $request) {
            return [
                MenuHeader::make('Account Info'),
                MenuItem::make('My Profile')->noIcon(),
                MenuItem::make('Account Settings')->noIcon(),

                MenuItem::make("Logout")
                    ->route('logout')
                    ->viaForm()
                    ->noIcon(),
            ];
        });
    }

    /**
     * Register Eden Gate
     *
     * @return void
     */
    protected function gate()
    {
        Gate::define('accessEden', function ($user) {
            return true;
        });
    }

    /**
     * Register Global Actions
     *
     * @return array
     */
    protected function actions()
    {
        return [
            EditAction::make(),
            DetailsAction::make(),
            ReplicateAction::make(),
            DeleteAction::make()
        ];
    }

    /**
     * Register Global Filters
     *
     * @return array
     */
    protected function filters()
    {
        return [

        ];
    }

    /**
     * Register Application Plugins
     *
     * @return array
     */
    protected function plugins()
    {

    }

    /**
     * Register any events for your application.
     *
     * @return void
     */
    public function register()
    {

    }

}
